{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container.jsx","components/Navigation.jsx","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu/default-avatar.jpeg","components/UserMenu/UserMenu.js","components/AuthNav.jsx","components/AppBar.js","views/HomeView.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","redux/contacts/contacts-operations.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Nothing.jsx","components/Loader.jsx","views/ContactsView.js","views/RegisterView.js","views/LoginView.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","Navigation","to","exact","activeClassName","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","getIsAuthenticated","state","Boolean","auth","getUsername","user","name","mapDispatchToProps","onLogout","dispatch","a","authActions","post","message","connect","authSelectors","avatar","defaultAvatar","src","alt","width","type","onClick","AuthNav","isAuthenticated","HomeView","role","aria-label","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","filterContacts","getContacts","contacts","items","getLoading","loading","getFilter","filter","getContactListFilter","createSelector","toLowerCase","includes","value","selectors","onChange","e","actions","target","style","wrapper","label","input","ContactList","this","props","fetchContacts","onDelBtnClick","map","contact","listItem","namber","number","btn","id","event","React","Component","delete","then","catch","error","operations","get","data","ContactForm","handelChange","currentTarget","setState","resetForm","handleSabmit","preventDefault","some","alert","onSubmit","css","title","form","autoComplete","length","obj","Nothing","Loader","color","isLoading","RegisterView","email","password","handleChange","handleSubmit","onRegister","credentials","response","LoginView","onLogin","App","onGetCurrentToProps","path","component","ContactsView","getState","persistedToken","createReducer","_","payload","Number","action","combineReducers","initialUserState","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.224f8991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__3MqSl\",\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"name\":\"Filter_name__pSTfl\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__29Cbr\",\"name\":\"ContactList_name__2WLgA\",\"namber\":\"ContactList_namber__xUfTY\",\"btn\":\"ContactList_btn__1Xk4q\"};","import React from \"react\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact className=\"link\" activeClassName=\"activeLink\">\n      Home\n    </NavLink>\n\n    <NavLink to=\"/contacts\" exact className=\"link\" activeClassName=\"activeLink\">\n      Contacts\n    </NavLink>\n\n    {/* <NavLink\n      to=\"/todos\"\n      exact\n      className=\"link\" \n      activeClassName=\"activeLink\"\n    >\n      Заметки\n    </NavLink> */}\n  </nav>\n);\n\nexport default Navigation;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const registerRequest = createAction(\"auth/registerRequest\");\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\nexport const registerError = createAction(\"auth/registerError\");\n\nexport const loginRequest = createAction(\"auth/loginRequest\");\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\nexport const loginError = createAction(\"auth/loginError\");\n\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\nexport const logoutError = createAction(\"auth/logoutError\");\n\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nexport const getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n","import axios from \"axios\";\nimport * as authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\n// В заголовок авторизации ставим и снимаем токен :\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nexport const register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nexport const logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nexport const logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n","export const getIsAuthenticated = (state) => Boolean(state.auth.token);\n\nexport const getUsername = (state) => state.auth.user.name;\n","export default __webpack_public_path__ + \"static/media/default-avatar.fe4c4f3c.jpeg\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authOperations from \"../../redux/auth/auth-operations\";\nimport * as authSelectors from \"../../redux/auth/auth-selectors\";\nimport defaultAvatar from \"./default-avatar.jpeg\";\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className=\"container\">\n    <img src={avatar} alt=\"\" width=\"32\" className=\"avatar\" />\n    <span className=\"name\">Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout} className=\"user-btn\">\n      Log out\n    </button>\n  </div>\n);\nconst mapStateToProps = (state) => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst AuthNav = () => (\n  <div>\n    <NavLink to=\"/register\" exact className=\"link\" activeClassName=\"activeLink\">\n      Registration\n    </NavLink>\n\n    <NavLink to=\"/login\" exact className=\"link\" activeClassName=\"activeLink\">\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className=\"header\">\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from \"react\";\n\nconst HomeView = () => (\n  <div className=\"wrapper\">\n    <h1 className=\"home-view-title\">Cloud phonebook</h1>\n    <h2 className=\"home-view-subtitle\">\n      Your contacts in one place{\" \"}\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n    </h2>\n    <img\n      className=\"home-view-img\"\n      src=\"https://cdn.lifehacker.ru/wp-content/uploads/2018/01/Kak-perenesti-kontakty-s-odnogo-telefona-na-drugoJ_1516567189-1140x570.jpg\"\n      alt=\"home_view_img\"\n    />\n  </div>\n);\n\nexport default HomeView;\n","import { createAction } from \"@reduxjs/toolkit\";\n\n// Оновлення\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\n// Додавання\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\n// Видалення\nexport const delContactRequest = createAction(\"contacts/delContactRequest\");\nexport const delContactSuccess = createAction(\"contacts/delContactSuccess\");\nexport const delContactError = createAction(\"contacts/delContactError\");\n\nexport const filterContacts = createAction(\"Contact/filter\");\n\n// ====== До contacts-operetions\n// export const addContact = createAction(\"Contact/add\");\n// export const deleteContact = createAction(\"Contact/delete\");\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getLoading = (state) => state.contacts.loading;\n\nexport const getFilter = (state) => state.contacts.filter;\n\n// ===== Мемоизация\nexport const getContactListFilter = createSelector(\n  [getFilter, getContacts],\n  (filter, items) => {\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n// ==== До\n// export const getContactListFilter = (state) => {\n//   const filter = getFilter(state);\n//   const items = getContacts(state);\n\n//   return items.filter(({ name }) =>\n//     name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={style.wrapper}>\n      <label className={style.label}>\n        <span className={style.name}>Find contacts by name</span>\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = PropTypes.shape({\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}).isRequired;\n\nconst mapStateToProps = (state) => ({\n  value: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from \"axios\";\nimport * as actions from \"./contacts-actions\";\n\n// axios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\n// Оновлення\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactError(error.message));\n  }\n};\n\n// Додавання\nexport const addContact = ({ name, number }) => (dispatch) => {\n  const contacts = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", contacts)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch((error) => dispatch(actions.addContactError(error.message)));\n};\n\n// Видалення\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(actions.delContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.delContactSuccess(id)))\n    .catch((error) => dispatch(actions.delContactError(error.message)));\n};\n\n// ===============\n// export const fetchContacts = () => (dispatch) => {\n//   dispatch(actions.fetchContactRequest());\n\n//   axios\n//     .get(\"/contacts\")\n//     .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n//     .catch((error) => dispatch(actions.fetchContactError(error.message)));\n// };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport style from \"./ContactList.module.css\";\n\nclass ContactList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, onDelBtnClick } = this.props;\n    return (\n      <ul>\n        {contacts.map((contact) => (\n          <li key={contact.id} className={style.listItem}>\n            <span className={style.name}>{contact.name}:</span>\n            <span className={style.namber}>{contact.number}</span>\n            <button\n              className={style.btn}\n              type=\"button\"\n              id={contact.id}\n              onClick={(event) => onDelBtnClick(event.target.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n  onDelBtnClick: PropTypes.func.isRequired,\n}).isRequired;\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContactListFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelBtnClick: (id) => dispatch(operations.deleteContact(id)),\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleSabmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.some((contact) => contact.name === name)) {\n      return alert(`Name \"${name}\" already exists, please enter another name.`);\n    } else this.props.onSubmit({ name, number });\n\n    this.resetForm();\n  };\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <>\n        <div>\n          <h1 className={css.title}>Phonebook</h1>\n          <form\n            className={css.form}\n            autoComplete=\"off\"\n            onSubmit={this.handleSabmit}\n          >\n            <label className={css.label}>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handelChange}\n                className={css.input}\n              />\n            </label>\n            <label className={css.label}>\n              Number:\n              <input\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                onChange={this.handelChange}\n                className={css.input}\n              />\n            </label>\n            <button type=\"submit\" className={css.btn}>\n              Add contact\n            </button>\n          </form>\n          <h2 className={css.title}>Contacts ({contacts.length})</h2>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (obj) => dispatch(operations.addContact(obj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\n\nconst Nothing = () => {\n  return (\n    <div>\n      <h2 className=\"message\">Nothing, please start creating your contact</h2>\n    </div>\n  );\n};\n\nexport default Nothing;\n","import React from \"react\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loaderDiv\">\n      <PropagateLoader loading={true} color={\"red\"} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Filter from \"../components/Filter/Filter\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport Nothing from \"../components/Nothing\";\nimport Loader from \"../components/Loader.jsx\";\nimport * as selectors from \"../redux/contacts/contacts-selectors\";\n\nconst App = ({ contacts, isLoading }) => {\n  return (\n    <div className=\"wrapper\">\n      <ContactForm />\n\n      {contacts.length === 0 && <Nothing />}\n\n      {contacts.length > 1 && <Filter />}\n\n      {isLoading && <Loader />}\n\n      {<ContactList />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n  isLoading: selectors.getLoading(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authOperations from \"../redux/auth/auth-operations\";\n\nclass RegisterView extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"title\">Registration</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"authForm\"\n          autoComplete=\"off\"\n        >\n          <label className=\"authLabel\">\n            Name\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"authLabel\">\n            Mail\n            <input\n              className=\"input\"\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"authLabel\">\n            Password\n            <input\n              className=\"input\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button className=\"btn\" type=\"submit\">\n            Registration\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authOperations from \"../redux/auth/auth-operations\";\n\nclass LoginView extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"title\">Enter your login and password</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"authForm\"\n          autoComplete=\"off\"\n        >\n          <label className=\"authLabel\">\n            Mail\n            <input\n              className=\"input\"\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"authLabel\">\n            Password\n            <input\n              className=\"input\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button className=\"btn\" type=\"submit\">\n            Log in\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginView);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Container from \"./components/Container\";\nimport AppBar from \"./components/AppBar\";\nimport HomeView from \"./views/HomeView\";\nimport ContactsView from \"./views/ContactsView\";\nimport RegisterView from \"./views/RegisterView\";\nimport LoginView from \"./views/LoginView\";\nimport * as authOperations from \"./redux/auth/auth-operations\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onGetCurrentToProps();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Switch>\n          <Route exact path=\"/\" component={HomeView} />\n          <Route path=\"/register\" component={RegisterView} />\n          <Route path=\"/login\" component={LoginView} />\n          <Route path=\"/contacts\" component={ContactsView} />\n          {/* <Route path=\"/todos\" component={TodosView} /> */}\n        </Switch>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentToProps: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.delContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== Number(payload)),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.delContactRequest]: () => true,\n  [actions.delContactSuccess]: () => false,\n  [actions.delContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport * as store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}