{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container.jsx","components/Navigation.jsx","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.jsx","components/AppBar.js","views/HomeView.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","redux/contacts/contacts-operations.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Nothing.jsx","components/Loader.jsx","views/ContactsView.js","views/RegisterView.js","views/LoginView.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","exact","style","activeStyle","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","getIsAuthenticated","state","Boolean","auth","getUsername","user","name","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","dispatch","a","authActions","post","message","connect","authSelectors","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","isAuthenticated","minHeight","title","fontSize","textAlign","HomeView","role","aria-label","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","filterContacts","getContacts","contacts","items","getLoading","loading","getFilter","filter","getContactListFilter","createSelector","toLowerCase","includes","value","selectors","onChange","e","actions","target","wrapper","label","input","ContactList","this","props","fetchContacts","onDelBtnClick","map","contact","listItem","namber","number","btn","id","event","React","Component","delete","then","catch","error","operations","get","data","ContactForm","handelChange","currentTarget","setState","resetForm","handleSabmit","preventDefault","some","alert","onSubmit","css","form","autoComplete","length","obj","Nothing","Loader","isLoading","flexDirection","marginBottom","RegisterView","email","password","handleChange","handleSubmit","onRegister","credentials","response","LoginView","onLogin","App","path","component","ContactsView","createReducer","_","payload","Number","action","combineReducers","initialUserState","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25589378.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__3MqSl\",\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"label\":\"Filter_label__3DcZT\",\"name\":\"Filter_name__pSTfl\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__29Cbr\",\"name\":\"ContactList_name__2WLgA\",\"namber\":\"ContactList_namber__xUfTY\",\"btn\":\"ContactList_btn__1Xk4q\"};","import React from \"react\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Главная\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Контакты\n    </NavLink>\n\n    {/* <NavLink\n      to=\"/todos\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Заметки\n    </NavLink> */}\n  </nav>\n);\n\nexport default Navigation;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const registerRequest = createAction(\"auth/registerRequest\");\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\nexport const registerError = createAction(\"auth/registerError\");\n\nexport const loginRequest = createAction(\"auth/loginRequest\");\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\nexport const loginError = createAction(\"auth/loginError\");\n\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\nexport const logoutError = createAction(\"auth/logoutError\");\n\nexport const getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nexport const getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nexport const getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n","import axios from \"axios\";\nimport * as authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://lpj-tasker.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nexport const register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nexport const logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nexport const logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\n","export const getIsAuthenticated = (state) => Boolean(state.auth.token);\n\nexport const getUsername = (state) => state.auth.user.name;\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authOperations from \"../../redux/auth/auth-operations\";\nimport * as authSelectors from \"../../redux/auth/auth-selectors\";\nimport defaultAvatar from \"./default-avatar.png\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\nconst mapStateToProps = (state) => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #2A363B\",\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from \"react\";\n\nconst styles = {\n  container: {\n    minHeight: \"calc(100vh - 50px)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: \"center\",\n  },\n};\n\nconst HomeView = () => (\n  <div style={styles.container}>\n    <h1 style={styles.title}>\n      Приветственная страница нашего сервиса{\" \"}\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\n        💁‍♀️\n      </span>\n    </h1>\n  </div>\n);\n\nexport default HomeView;\n","import { createAction } from \"@reduxjs/toolkit\";\n\n// Оновлення\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\n// Додавання\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\n// Видалення\nexport const delContactRequest = createAction(\"contacts/delContactRequest\");\nexport const delContactSuccess = createAction(\"contacts/delContactSuccess\");\nexport const delContactError = createAction(\"contacts/delContactError\");\n\nexport const filterContacts = createAction(\"Contact/filter\");\n\n// ====== До contacts-operetions\n// export const addContact = createAction(\"Contact/add\");\n// export const deleteContact = createAction(\"Contact/delete\");\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getLoading = (state) => state.contacts.loading;\n\nexport const getFilter = (state) => state.contacts.filter;\n\n// ===== Мемоизация\nexport const getContactListFilter = createSelector(\n  [getFilter, getContacts],\n  (filter, items) => {\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n// ==== До\n// export const getContactListFilter = (state) => {\n//   const filter = getFilter(state);\n//   const items = getContacts(state);\n\n//   return items.filter(({ name }) =>\n//     name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={style.wrapper}>\n      <label className={style.label}>\n        <span className={style.name}>Find contacts by name</span>\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = PropTypes.shape({\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}).isRequired;\n\nconst mapStateToProps = (state) => ({\n  value: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from \"axios\";\nimport * as actions from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\n// Оновлення\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactError(error));\n  }\n};\n\n// Додавання\nexport const addContact = ({ name, number }) => (dispatch) => {\n  const contacts = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", contacts)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch((error) => dispatch(actions.addContactError(error)));\n};\n\n// Видалення\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(actions.delContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.delContactSuccess(id)))\n    .catch((error) => dispatch(actions.delContactError(error)));\n};\n\n// ===============\n// export const fetchContacts = () => (dispatch) => {\n//   dispatch(actions.fetchContactRequest());\n\n//   axios\n//     .get(\"/contacts\")\n//     .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n//     .catch((error) => dispatch(actions.fetchContactError(error)));\n// };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport style from \"./ContactList.module.css\";\n\nclass ContactList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, onDelBtnClick } = this.props;\n    return (\n      <ul>\n        {contacts.map((contact) => (\n          <li key={contact.id} className={style.listItem}>\n            <span className={style.name}>{contact.name}:</span>\n            <span className={style.namber}>{contact.number}</span>\n            <button\n              className={style.btn}\n              type=\"button\"\n              id={contact.id}\n              onClick={(event) => onDelBtnClick(event.target.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n  onDelBtnClick: PropTypes.func.isRequired,\n}).isRequired;\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContactListFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelBtnClick: (id) => dispatch(operations.deleteContact(id)),\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport * as selectors from \"../../redux/contacts/contacts-selectors\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleSabmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.some((contact) => contact.name === name)) {\n      return alert(`Name \"${name}\" already exists, please enter another name.`);\n    } else this.props.onSubmit({ name, number });\n\n    this.resetForm();\n  };\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <>\n        <div>\n          <h1 className={css.title}>Phonebook</h1>\n          <form\n            className={css.form}\n            autoComplete=\"off\"\n            onSubmit={this.handleSabmit}\n          >\n            <label className={css.label}>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handelChange}\n                className={css.input}\n              />\n            </label>\n            <label className={css.label}>\n              Number:\n              <input\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                onChange={this.handelChange}\n                className={css.input}\n              />\n            </label>\n            <button type=\"submit\" className={css.btn}>\n              Add contact\n            </button>\n          </form>\n          <h2 className={css.title}>Contacts ({contacts.length})</h2>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (obj) => dispatch(operations.addContact(obj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\n\nconst Nothing = () => {\n  return (\n    <div>\n      <h2 className=\"message\">Nothing, please start creating your contact</h2>\n    </div>\n  );\n};\n\nexport default Nothing;\n","import React from \"react\";\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loaderDiv\">\n      <PropagateLoader loading={true} color={\"red\"} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Filter from \"../components/Filter/Filter\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport Nothing from \"../components/Nothing\";\nimport Loader from \"../components/Loader.jsx\";\nimport * as selectors from \"../redux/contacts/contacts-selectors\";\n\nconst App = ({ contacts, isLoading }) => {\n  return (\n    <div className=\"wrapper\">\n      <ContactForm />\n\n      {contacts.length === 0 && <Nothing />}\n\n      {contacts.length > 1 && <Filter />}\n\n      {isLoading && <Loader />}\n\n      {<ContactList />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getContacts(state),\n  isLoading: selectors.getLoading(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authOperations from \"../redux/auth/auth-operations\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\n\nclass RegisterView extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"title\">Страница регистрации</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Имя\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Зарегистрироваться</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as authOperations from \"../redux/auth/auth-operations\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\n\nclass LoginView extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"title\">Страница логина</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Войти</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginView);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Container from \"./components/Container\";\nimport AppBar from \"./components/AppBar\";\nimport HomeView from \"./views/HomeView\";\nimport ContactsView from \"./views/ContactsView\";\nimport RegisterView from \"./views/RegisterView\";\nimport LoginView from \"./views/LoginView\";\n\nconst App = () => {\n  return (\n    <Container>\n      <AppBar />\n\n      <Switch>\n        <Route exact path=\"/\" component={HomeView} />\n        <Route path=\"/register\" component={RegisterView} />\n        <Route path=\"/login\" component={LoginView} />\n        <Route path=\"/contacts\" component={ContactsView} />\n        {/* <Route path=\"/todos\" component={TodosView} /> */}\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [actions.delContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== Number(payload)),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterContacts]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.delContactRequest]: () => true,\n  [actions.delContactSuccess]: () => false,\n  [actions.delContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport * as store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}